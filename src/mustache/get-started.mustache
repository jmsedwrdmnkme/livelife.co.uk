<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" type="text/css" href="/_themes/[!--$SCS_THEME_NAME--]/assets/css/main.css">

  <!--$SCS_RENDER_INFO-->
  <!--$SCS_SITE_HEADER-->
  <!--$SCS_PAGE_HEADER-->
</head>
<body>

<header>
  <h1 class="visually-hidden">Get started</h1>
</header>

<div class="container-fluid position-relative" id="onboardingComponent">
  <div class="row">
    <main id="onboarding" class="col-lg-8 order-1 pt-4 pt-lg-5"></main>
    <aside class="d-none d-lg-block col-3 text-center order-0 pt-5 px-4">
      <img src="/_themes/[!--$SCS_THEME_NAME--]/assets/img/livelife-logo.svg" alt="LiveLife logo" width="134" height="29">
      <div class="aside-message my-5 fw-bold"></div>
      <img src="/_themes/[!--$SCS_THEME_NAME--]/assets/img/onboarding-aside.svg" alt="" width="183" height="209">
    </aside>
  </div>
</div>

<script src="https://tp-opa--tst2.custhelp.com/web-determinations/staticresource/interviews.js"></script>
<script>
  var el = document.getElementById("onboarding");
  var webDeterminationsUrl = "https://tp-opa--tst2.custhelp.com/web-determinations";
  var deploymentName = "Livelife Contact Us plus Assessment1 Rev2";
  OraclePolicyAutomationInterview.StartInterview(el, webDeterminationsUrl, deploymentName);

  function handleMessage(message) {
    const asideText = document.querySelector('.aside-text');
    const asidePlaceHolder = document.querySelector('.aside-message');
    asidePlaceHolder.appendChild(asideText);

    let messages = document.querySelectorAll('aside .aside-text');
    for(var i = 0; i < messages.length; i++) {
      if (i > 0) {
        messages[0].parentNode.removeChild(messages[0]);
      }
    }

    observer.observe(document, {
      childList: true,
      subtree: true
    });
  }

  var observer = new MutationObserver(function (mutations, me) {
    var message = document.querySelector('form');
    if (message) {
      setTimeout(() => {
        handleMessage(message); 
      }, 200);

      me.disconnect();
      return;
    }
  });

  observer.observe(document, {
    childList: true,
    subtree: true
  });
</script>
<script data-main="/_sitescloud/renderer/renderer.js" src="/_sitescloud/renderer/require.js"></script>
<!--$SCS_SITE_FOOTER-->

</body>
</html>
